#!/usr/bin/bash
# Tested only for ZorinOS

append(){ # $1: text, $2: path
    sudo=""
    if [[ $2 != */home* ]]; then
        sudo="sudo"
    fi

    $sudo mkdir -p $(dirname "$2") && $sudo touch "$2"
    if [[ $(cat $2) == *"$1"* ]]; then
        echo -e "
        \rThe following lines were already added
        \r=============
        \r$1
        \r============="
    else
        cat << POMU | $sudo tee -a $2 > /dev/null
        $1
POMU
    fi
}

installVscodeExtension(){
    list=(${1//'\n'/})
    for i in ${!list[@]}; do
        code --install-extension ${list[i]}
    done
}

sudo add-apt-repository ppa:git-core/ppa -y
sudo apt update -y
sudo apt upgrade -y

# apt
echo "
Installing apt packages"
sudo apt install python3-autopep8 xclip neofetch aria2 gimp git gh mpv mkvtoolnix mkvtoolnix-gui -y

# flatpak
echo "
Installing flatpak packages"
flatpak install flathub com.belmoussaoui.Authenticator com.discordapp.Discord org.kde.kdenlive org.x.Warpinator com.github.finefindus.eyedropper -y

# Github CLI & login
echo "
Installing Github CLI & login"
type -p curl >/dev/null || sudo apt install curl -y
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y

gh auth login

# Linux config
echo "
Adding Linux configs"
git clone https://github.com/pomubry/linux-config.git ~/Downloads/linux-config
chmod +x ~/Downloads/linux-config/bin/*
mkdir ~/bin
cp -r ~/Downloads/linux-config/bin ~/Downloads/linux-config/mumble-dark.qbtheme ~/Downloads/linux-config/.poshthemes ~
cp -r ~/Downloads/linux-config/Code ~/Downloads/linux-config/mpv ~/.config

append '
# bin
export PATH=~/bin:$PATH' ~/.bashrc

if [[ $(cat ~/.gitconfig) == *defaultbranch* ]]; then
    echo "Github user/defaultbranch config already added. Skipping..."
else
    echo "$(cat ~/Downloads/linux-config/.gitconfig)
$(cat ~/.gitconfig)" > ~/.gitconfig
fi

rm -rf ~/Downloads/linux-config

# oh-my-posh
echo "
Installing oh-my-posh"
sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh
sudo chmod +x /usr/local/bin/oh-my-posh
# mkdir ~/.poshthemes
# wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/themes.zip -O ~/.poshthemes/themes.zip
# unzip -o ~/.poshthemes/themes.zip -d ~/.poshthemes
chmod u+rw ~/.poshthemes/*.omp.*
# rm ~/.poshthemes/themes.zip

# font for oh-my-posh
echo "
Installing font for oh-my-posh"
wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/CascadiaCode.zip -O ~/Downloads/cascadia-nf.zip
mkdir ~/.fonts
unzip -o -j ~/Downloads/cascadia-nf.zip "Caskaydia Cove Nerd Font Complete Mono Regular.otf" -d ~/.fonts
rm ~/Downloads/cascadia-nf.zip

# config for oh-my-posh
append '
# poshtheme config
eval "$(oh-my-posh init bash --config ~/.poshthemes/pdrome.omp.json)"' ~/.bashrc

# nvm
echo "
Installing nvm"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash

# Magic Trackpad for ZorinOS(xfce)
echo "
Adding config for Magic Trackpad"
append '[Touchpad touch override]
MatchUdevType=touchpad
MatchName=*Magic Trackpad 2
AttrPressureRange=4:0' /etc/libinput/local-overrides.quirks
append 'Section "InputClass"
  Identifier      "Touchpads"
  Driver          "libinput"
  MatchProduct    "Apple Inc. Magic Trackpad 2"
  MatchDevicePath "/dev/input/event*"
EndSection' /usr/share/X11/xorg.conf.d/90-magictrackpad.conf

# Firefox config
echo "
Adding config for smooth scrolling in Firefox"
echo export MOZ_USE_XINPUT2=1 | sudo tee /etc/profile.d/use-xinput2.sh

# VSCode
echo "
Installing VSCode"
sudo apt-get install wget gpg
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
rm -f packages.microsoft.gpg

sudo apt install apt-transport-https
sudo apt update
sudo apt install code

# vscode extension
echo "
Installing VSCode extensions"
installVscodeExtension '
AntiAntiSepticeye.vscode-color-picker
dbaeumer.vscode-eslint
dotenv.dotenv-vscode
dsznajder.es7-react-js-snippets
esbenp.prettier-vscode
formulahendry.auto-rename-tag
formulahendry.code-runner
ms-python.isort
ms-python.python
ms-python.vscode-pylance
ms-toolsai.jupyter
ms-toolsai.jupyter-keymap
ms-toolsai.jupyter-renderers
ms-toolsai.vscode-jupyter-cell-tags
ms-toolsai.vscode-jupyter-slideshow
quicktype.quicktype
vscode-icons-team.vscode-icons
Vue.volar
Vue.vscode-typescript-vue-plugin
zhuangtongfa.material-theme'

# Veracrypt
echo "
Installing Veracrypt"
veracryptLatest=$(curl https://www.veracrypt.fr/en/Downloads.html | grep -i "Latest Stable Release" | egrep -o "[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2}")
ubuntuVersion=$(cat /proc/version | egrep -o "[0-9]{2}\.[0-9]{2}\.[0-9]{1,2}")
ubuntuVersion=${ubuntuVersion:0:5}
veracryptGui="https://launchpad.net/veracrypt/trunk/$veracryptLatest/+download/veracrypt-$veracryptLatest-Ubuntu-$ubuntuVersion-amd64.deb"
wget $veracryptGui -O ~/Downloads/veracryptGui.deb
sudo apt install ~/Downloads/veracryptGui.deb -y
rm ~/Downloads/veracryptGui.deb

# ProtonVPN
echo "
Installing ProtonVPN"
protonvpn=$(curl https://protonvpn.com/support/linux-ubuntu-vpn-setup/ | grep "/stable" | egrep -o "https.+\.deb")
wget $protonvpn -O ~/Downloads/protonvpn.deb
sudo apt install ~/Downloads/protonvpn.deb
rm ~/Downloads/protonvpn.deb

echo "Done!"
